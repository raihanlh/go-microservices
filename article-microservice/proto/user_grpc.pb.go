// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.12.4
// source: user.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// UserDetailServiceClient is the client API for UserDetailService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type UserDetailServiceClient interface {
	CreateUpdateUserDetail(ctx context.Context, in *CreateUpdateUserDetailRequest, opts ...grpc.CallOption) (*UserDetail, error)
	GetUserDetailByUser(ctx context.Context, in *GetUserDetailByUserRequest, opts ...grpc.CallOption) (*UserDetail, error)
	GetAllUserDetail(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*GetAllUserDetailResponse, error)
}

type userDetailServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewUserDetailServiceClient(cc grpc.ClientConnInterface) UserDetailServiceClient {
	return &userDetailServiceClient{cc}
}

func (c *userDetailServiceClient) CreateUpdateUserDetail(ctx context.Context, in *CreateUpdateUserDetailRequest, opts ...grpc.CallOption) (*UserDetail, error) {
	out := new(UserDetail)
	err := c.cc.Invoke(ctx, "/proto.UserDetailService/CreateUpdateUserDetail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userDetailServiceClient) GetUserDetailByUser(ctx context.Context, in *GetUserDetailByUserRequest, opts ...grpc.CallOption) (*UserDetail, error) {
	out := new(UserDetail)
	err := c.cc.Invoke(ctx, "/proto.UserDetailService/GetUserDetailByUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userDetailServiceClient) GetAllUserDetail(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*GetAllUserDetailResponse, error) {
	out := new(GetAllUserDetailResponse)
	err := c.cc.Invoke(ctx, "/proto.UserDetailService/GetAllUserDetail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserDetailServiceServer is the server API for UserDetailService service.
// All implementations must embed UnimplementedUserDetailServiceServer
// for forward compatibility
type UserDetailServiceServer interface {
	CreateUpdateUserDetail(context.Context, *CreateUpdateUserDetailRequest) (*UserDetail, error)
	GetUserDetailByUser(context.Context, *GetUserDetailByUserRequest) (*UserDetail, error)
	GetAllUserDetail(context.Context, *Empty) (*GetAllUserDetailResponse, error)
	mustEmbedUnimplementedUserDetailServiceServer()
}

// UnimplementedUserDetailServiceServer must be embedded to have forward compatible implementations.
type UnimplementedUserDetailServiceServer struct {
}

func (UnimplementedUserDetailServiceServer) CreateUpdateUserDetail(context.Context, *CreateUpdateUserDetailRequest) (*UserDetail, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateUpdateUserDetail not implemented")
}
func (UnimplementedUserDetailServiceServer) GetUserDetailByUser(context.Context, *GetUserDetailByUserRequest) (*UserDetail, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserDetailByUser not implemented")
}
func (UnimplementedUserDetailServiceServer) GetAllUserDetail(context.Context, *Empty) (*GetAllUserDetailResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllUserDetail not implemented")
}
func (UnimplementedUserDetailServiceServer) mustEmbedUnimplementedUserDetailServiceServer() {}

// UnsafeUserDetailServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to UserDetailServiceServer will
// result in compilation errors.
type UnsafeUserDetailServiceServer interface {
	mustEmbedUnimplementedUserDetailServiceServer()
}

func RegisterUserDetailServiceServer(s grpc.ServiceRegistrar, srv UserDetailServiceServer) {
	s.RegisterService(&UserDetailService_ServiceDesc, srv)
}

func _UserDetailService_CreateUpdateUserDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateUpdateUserDetailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserDetailServiceServer).CreateUpdateUserDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.UserDetailService/CreateUpdateUserDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserDetailServiceServer).CreateUpdateUserDetail(ctx, req.(*CreateUpdateUserDetailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserDetailService_GetUserDetailByUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserDetailByUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserDetailServiceServer).GetUserDetailByUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.UserDetailService/GetUserDetailByUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserDetailServiceServer).GetUserDetailByUser(ctx, req.(*GetUserDetailByUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserDetailService_GetAllUserDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserDetailServiceServer).GetAllUserDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.UserDetailService/GetAllUserDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserDetailServiceServer).GetAllUserDetail(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

// UserDetailService_ServiceDesc is the grpc.ServiceDesc for UserDetailService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var UserDetailService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "proto.UserDetailService",
	HandlerType: (*UserDetailServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateUpdateUserDetail",
			Handler:    _UserDetailService_CreateUpdateUserDetail_Handler,
		},
		{
			MethodName: "GetUserDetailByUser",
			Handler:    _UserDetailService_GetUserDetailByUser_Handler,
		},
		{
			MethodName: "GetAllUserDetail",
			Handler:    _UserDetailService_GetAllUserDetail_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user.proto",
}
